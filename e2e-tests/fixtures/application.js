import {
  APPLICATION,
  COVER_PERIOD as COVER_PERIOD_CONSTANTS,
  FIELD_IDS,
  FIELD_VALUES,
  MULTI_LINE_STRING,
  TOTAL_CONTRACT_VALUE as TOTAL_CONTRACT_VALUE_CONSTANTS,
  WEBSITE_EXAMPLES,
} from '../constants';
import { COMPANIES_HOUSE_NUMBER } from '../constants/examples';
import { GBP_CURRENCY_CODE } from './currencies';
import { COUNTRY_APPLICATION_SUPPORT } from './countries';
import mockCompanies from './companies';

const {
  AGENT_SERVICE_CHARGE,
} = APPLICATION.EXPORT_CONTRACT;

const {
  INSURANCE: {
    ACCOUNT: {
      FIRST_NAME: ACCOUNT_FIRST_NAME,
      LAST_NAME: ACCOUNT_LAST_NAME,
      EMAIL: ACCOUNT_EMAIL,
    },
    ELIGIBILITY: {
      COVER_PERIOD_ID,
      HAS_COMPANIES_HOUSE_NUMBER,
      HAS_END_BUYER,
      HAS_MINIMUM_UK_GOODS_OR_SERVICES,
      TOTAL_CONTRACT_VALUE_ID,
      VALID_EXPORTER_LOCATION,
      BUYER_COUNTRY,
    },
    POLICY: {
      CONTRACT_POLICY: {
        REQUESTED_START_DATE,
        POLICY_CURRENCY_CODE,
        SINGLE: { CONTRACT_COMPLETION_DATE, TOTAL_CONTRACT_VALUE },
        MULTIPLE: { TOTAL_MONTHS_OF_COVER },
      },
      EXPORT_VALUE: {
        MULTIPLE: { TOTAL_SALES_TO_BUYER, MAXIMUM_BUYER_WILL_OWE },
      },
      DIFFERENT_NAME_ON_POLICY: { POSITION: CONTACT_POSITION },
      NEED_PRE_CREDIT_PERIOD,
      CREDIT_PERIOD_WITH_BUYER,
      REQUESTED_JOINTLY_INSURED_PARTY: { COMPANY_NAME, COMPANY_NUMBER, COUNTRY_CODE },
      USING_BROKER,
      BROKER_DETAILS: {
        NAME,
        EMAIL,
        FULL_ADDRESS: BROKER_FULL_ADDRESS,
      },
      LOSS_PAYEE_FINANCIAL_UK: { ACCOUNT_NUMBER, SORT_CODE },
      LOSS_PAYEE_FINANCIAL_INTERNATIONAL: { BIC_SWIFT_CODE, IBAN },
      FINANCIAL_ADDRESS,
      LOSS_PAYEE_DETAILS: {
        NAME: LOSS_PAYEE_NAME,
      },
    },
    EXPORT_CONTRACT: {
      ABOUT_GOODS_OR_SERVICES: { DESCRIPTION, FINAL_DESTINATION },
      HOW_WILL_YOU_GET_PAID: { PAYMENT_TERMS_DESCRIPTION },
      PRIVATE_MARKET: { ATTEMPTED, DECLINED_DESCRIPTION },
      AGENT_DETAILS: { COUNTRY_CODE: AGENT_COUNTRY_CODE, FULL_ADDRESS: AGENT_FULL_ADDRESS, NAME: AGENT_NAME },
      AGENT_SERVICE: { IS_CHARGING, SERVICE_DESCRIPTION },
      AGENT_CHARGES: {
        METHOD, PAYABLE_COUNTRY_CODE, FIXED_SUM_AMOUNT, CHARGE_PERCENTAGE,
      },
    },
    EXPORTER_BUSINESS: {
      ALTERNATIVE_TRADING_ADDRESS: {
        FULL_ADDRESS: EXPORTER_BUSINESS_FULL_ALT_TRADING_ADDRESS,
      },
      NATURE_OF_YOUR_BUSINESS: {
        GOODS_OR_SERVICES,
        YEARS_EXPORTING,
        EMPLOYEES_UK,
      },
      TURNOVER: {
        ESTIMATED_ANNUAL_TURNOVER,
        PERCENTAGE_TURNOVER,
      },
      HAS_CREDIT_CONTROL,
      YOUR_COMPANY: {
        DIFFERENT_TRADING_NAME,
      },
    },
    YOUR_BUYER: {
      COMPANY_OR_ORGANISATION: {
        ADDRESS,
        COUNTRY,
        NAME: COMPANY_OR_ORGANISATION_NAME,
        REGISTRATION_NUMBER,
        WEBSITE,
      },
      CONNECTION_WITH_BUYER,
      CONNECTION_WITH_BUYER_DESCRIPTION,
      TRADED_WITH_BUYER,
      HAS_PREVIOUS_CREDIT_INSURANCE_COVER_WITH_BUYER,
      PREVIOUS_CREDIT_INSURANCE_COVER_WITH_BUYER,
      TOTAL_OUTSTANDING_PAYMENTS,
      TOTAL_AMOUNT_OVERDUE,
      HAS_BUYER_FINANCIAL_ACCOUNTS,
    },
    CURRENCY: {
      CURRENCY_CODE,
    },
  },
} = FIELD_IDS;

/**
 * Application data we use and assert in E2E tests.
 */
const date = new Date();

/**
 * Add months to the above date.
 * If out of bound (< 12), then date will
 * move on the following year.
 * Note: JS months range (0 - 11)
 */
export const startDate = new Date(date.setMonth((date.getMonth() + 3))); // Add 3 months
export const endDate = new Date(date.setMonth((date.getMonth() + 6))); // Add 6 months

const application = {
  ELIGIBILITY: {
    buyerCountryIsoCode: COUNTRY_APPLICATION_SUPPORT.ONLINE.ISO_CODE,
    [COVER_PERIOD_ID]: COVER_PERIOD_CONSTANTS.LESS_THAN_2_YEARS.DB_ID,
    [HAS_COMPANIES_HOUSE_NUMBER]: true,
    [HAS_END_BUYER]: true,
    [HAS_MINIMUM_UK_GOODS_OR_SERVICES]: true,
    [TOTAL_CONTRACT_VALUE_ID]: TOTAL_CONTRACT_VALUE_CONSTANTS.LESS_THAN_250K.DB_ID,
    [VALID_EXPORTER_LOCATION]: true,
  },
  [BUYER_COUNTRY]: COUNTRY_APPLICATION_SUPPORT.ONLINE.NAME,
  COMPANY: mockCompanies[COMPANIES_HOUSE_NUMBER],
  YOUR_COMPANY: {
    [DIFFERENT_TRADING_NAME]: 'test',
  },
  POLICY: {
    [REQUESTED_START_DATE]: {
      day: '1',
      month: (startDate.getMonth() + 1),
      year: startDate.getFullYear(),
    },
    [CONTRACT_COMPLETION_DATE]: {
      day: '1',
      month: (endDate.getMonth() + 1),
      year: endDate.getFullYear(),
    },
    [TOTAL_CONTRACT_VALUE]: '10000',
    [POLICY_CURRENCY_CODE]: GBP_CURRENCY_CODE,
    [TOTAL_MONTHS_OF_COVER]: '2',
    [TOTAL_SALES_TO_BUYER]: '1000',
    [MAXIMUM_BUYER_WILL_OWE]: '500',
    [NEED_PRE_CREDIT_PERIOD]: 'false',
    [CREDIT_PERIOD_WITH_BUYER]: 'Mock description',
    LOSS_PAYEE_FINANCIAL_UK: {
      [SORT_CODE]: '102030',
      [ACCOUNT_NUMBER]: '12345678',
      [FINANCIAL_ADDRESS]: 'Mock UK bank address',
    },
    LOSS_PAYEE_FINANCIAL_INTERNATIONAL: {
      [BIC_SWIFT_CODE]: 'BKENGB2L123',
      [IBAN]: 'GB33BUKB20201555555555',
      [FINANCIAL_ADDRESS]: 'Mock international bank address',
    },
    [LOSS_PAYEE_NAME]: 'Mock name',
  },
  REQUESTED_JOINTLY_INSURED_PARTY: {
    [COMPANY_NAME]: 'Mock jointly insured company name',
    [COUNTRY_CODE]: COUNTRY_APPLICATION_SUPPORT.ONLINE.NAME,
    [COMPANY_NUMBER]: 'Mock jointly insured company number',
  },
  EXPORT_CONTRACT: {
    [DESCRIPTION]: 'Mock description',
    [FINAL_DESTINATION]: COUNTRY_APPLICATION_SUPPORT.ONLINE.ISO_CODE,
    HOW_WILL_YOU_GET_PAID: {
      [PAYMENT_TERMS_DESCRIPTION]: MULTI_LINE_STRING,
    },
    PRIVATE_MARKET: {
      [ATTEMPTED]: true,
      [DECLINED_DESCRIPTION]: MULTI_LINE_STRING,
    },
    AGENT_DETAILS: {
      [AGENT_NAME]: 'Mock export contract agent name',
      [AGENT_COUNTRY_CODE]: COUNTRY_APPLICATION_SUPPORT.ONLINE.NAME,
      [AGENT_FULL_ADDRESS]: MULTI_LINE_STRING,
    },
    AGENT_SERVICE: {
      [IS_CHARGING]: false,
      [SERVICE_DESCRIPTION]: MULTI_LINE_STRING,
    },
    AGENT_CHARGES: {
      [CHARGE_PERCENTAGE]: 10,
      [FIXED_SUM_AMOUNT]: 1500,
      [METHOD]: AGENT_SERVICE_CHARGE.METHOD.FIXED_SUM,
      [PAYABLE_COUNTRY_CODE]: COUNTRY_APPLICATION_SUPPORT.ONLINE.ISO_CODE,
    },
  },
  EXPORTER_BUSINESS: {
    [GOODS_OR_SERVICES]: 'abc',
    [YEARS_EXPORTING]: '0',
    [EMPLOYEES_UK]: '2000',
    [ESTIMATED_ANNUAL_TURNOVER]: '65000',
    [PERCENTAGE_TURNOVER]: '0',
    [HAS_CREDIT_CONTROL]: true,
  },
  BROKER: {
    [USING_BROKER]: true,
    [NAME]: 'Mock broker name',
    [EMAIL]: Cypress.env('GOV_NOTIFY_EMAIL_RECIPIENT_1'),
    [BROKER_FULL_ADDRESS]: MULTI_LINE_STRING,
  },
  BUYER: {
    [COMPANY_OR_ORGANISATION_NAME]: 'Test name',
    [ADDRESS]: 'Test address',
    [COUNTRY]: COUNTRY_APPLICATION_SUPPORT.ONLINE.NAME,
    [REGISTRATION_NUMBER]: '12345',
    [WEBSITE]: WEBSITE_EXAMPLES.VALID,
    [CONNECTION_WITH_BUYER]: FIELD_VALUES.NO,
    [TRADED_WITH_BUYER]: FIELD_VALUES.NO,
    [HAS_PREVIOUS_CREDIT_INSURANCE_COVER_WITH_BUYER]: FIELD_VALUES.NO,
    [CONNECTION_WITH_BUYER_DESCRIPTION]: 'test description',
    [PREVIOUS_CREDIT_INSURANCE_COVER_WITH_BUYER]: 'Mock cover with buyer',
    [TOTAL_OUTSTANDING_PAYMENTS]: '1000',
    [TOTAL_AMOUNT_OVERDUE]: '2000',
    [HAS_BUYER_FINANCIAL_ACCOUNTS]: FIELD_VALUES.NO,
    [CURRENCY_CODE]: GBP_CURRENCY_CODE,
  },
  POLICY_CONTACT: {
    [ACCOUNT_FIRST_NAME]: 'Bob',
    [ACCOUNT_LAST_NAME]: 'Smith',
    [ACCOUNT_EMAIL]: Cypress.env('GOV_NOTIFY_EMAIL_RECIPIENT_1'),
    [CONTACT_POSITION]: 'CEO',
  },
  DIFFERENT_TRADING_ADDRESS: {
    [EXPORTER_BUSINESS_FULL_ALT_TRADING_ADDRESS]: 'Mock full address',
  },
};

export const country = COUNTRY_APPLICATION_SUPPORT.ONLINE;

export default application;
