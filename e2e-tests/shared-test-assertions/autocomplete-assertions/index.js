import { autoCompleteField } from '../../pages/shared';

export const checkAutocompleteInput = {
  isVisible: (field) => {
    field.input().should('be.visible');
  },
  isNotVisible: (field) => {
    field.input().should('not.be.visible');
  },
  hasWorkingClientSideJS: (field) => {
    cy.checkClassName(
      field.input,
      'autocomplete__input',
    );
  },
  rendersInput: (field) => {
    field.input().should('exist');
  },
  rendersNoResultsMessage: (field, input) => {
    cy.keyboardInput(field.input(), input);

    const noResults = field.noResults();
    noResults.should('exist');

    // this text is generated by external component.
    cy.checkText(noResults, 'No results found');
  },
  rendersSingleResult: (field, input) => {
    // start searching for a country
    cy.keyboardInput(field.input(), input);

    const noResults = field.noResults();
    noResults.should('not.exist');

    const results = field.results();

    results.should('have.length', 1);
  },
  rendersMultipleResults: (field) => {
    cy.keyboardInput(field.input(), 'A');

    const noResults = field.noResults();
    noResults.should('not.exist');

    const results = field.results();

    results.should('have.length.greaterThan', 1);
  },
  allowsUserToRemoveCountryAndSearchAgain: (fieldId, country1, country2, expectedValue) => {
    cy.autocompleteKeyboardInput(fieldId, country1);
    // enter the second country
    cy.autocompleteKeyboardInput(fieldId, country2);

    cy.checkText(autoCompleteField(fieldId).results(), expectedValue);
  },
  checkInput: (field, expectedValue) => {
    // checks input displays the correct text
    cy.checkText(field.results(), expectedValue);
  },
};

export default checkAutocompleteInput;
