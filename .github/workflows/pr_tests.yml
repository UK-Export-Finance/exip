name: PR tests

on:
  pull_request:

env:
  environment: dev

jobs:
  set-environment:
    name: Set Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
    steps:
    - name: Initialise Environment
      run: |
        echo Setting environment to ${{ env.environment }}

  linting:
    name: Run linting
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Linting
        run: |
          npm install --legacy-peer-deps
          cd ui
          npm install --legacy-peer-deps
          cd ..
          npm run lint
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#exip-github-actions'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()  

  unit-tests:
    name: Run unit tests
    needs: linting
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Unit tests
        run: |
          cd ui
          npm install --legacy-peer-deps
          npm run test
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#exip-github-actions'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  e2e-tests:
    name: Run e2e tests
    needs: unit-tests
    runs-on: ubuntu-latest
    env:
      BASIC_AUTH_KEY: ${{ secrets.BASIC_AUTH_KEY }}
      BASIC_AUTH_SECRET: ${{ secrets.BASIC_AUTH_SECRET }}
      MULESOFT_API_CIS_URL: ${{ secrets.MULESOFT_API_CIS_URL }}
      MULESOFT_API_CIS_KEY: ${{ secrets.MULESOFT_API_CIS_KEY }}
      MULESOFT_API_CIS_SECRET: ${{ secrets.MULESOFT_API_CIS_SECRET }}
    steps:
      - uses: actions/checkout@v3
      - name: Start Docker Compose
        run: docker-compose up -d
      - name: Run e2e tests
        uses: cypress-io/github-action@v2
        with:
          headless: true
          record: false
          parallel: false
          browser: chrome
          project: ./e2e-tests
          config: video=false
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#exip-github-actions'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()
