name: PR tests

on:
  pull_request:

env:
  environment: dev

jobs:
  set-environment:
    name: Set Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
    steps:
    - name: Initialise Environment
      run: |
        echo Setting environment to ${{ env.environment }}

  linting:
    name: Run linting
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Linting
        run: |
          npm install --legacy-peer-deps
          cd ui
          npm install --legacy-peer-deps
          cd ..
          npm run lint
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#exip-github-actions'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()  

  unit-tests:
    name: Run unit tests
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Unit tests
        run: |
          cd ui
          npm install --legacy-peer-deps
          npm run test
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#exip-github-actions'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  e2e-tests:
    name: Run e2e tests
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        machines: [ 1, 2, 3, 4 ]
    env:
      BASIC_AUTH_KEY: ${{ secrets.BASIC_AUTH_KEY }}
      BASIC_AUTH_SECRET: ${{ secrets.BASIC_AUTH_SECRET }}
      USER_1_KEY: ${{ secrets.USER_1_KEY }}
      USER_1_SECRET: ${{ secrets.USER_1_SECRET }}
      USER_2_KEY: ${{ secrets.USER_2_KEY }}
      USER_2_SECRET: ${{ secrets.USER_2_SECRET }}
      USER_3_KEY: ${{ secrets.USER_3_KEY }}
      USER_3_SECRET: ${{ secrets.USER_3_SECRET }}
      USER_4_KEY: ${{ secrets.USER_4_KEY }}
      USER_4_SECRET: ${{ secrets.USER_4_SECRET }}
      USER_5_KEY: ${{ secrets.USER_4_KEY }}
      USER_5_SECRET: ${{ secrets.USER_5_SECRET }}
      MULESOFT_API_CIS_URL: ${{ secrets.MULESOFT_API_CIS_URL }}
      MULESOFT_API_CIS_KEY: ${{ secrets.MULESOFT_API_CIS_KEY }}
      MULESOFT_API_CIS_SECRET: ${{ secrets.MULESOFT_API_CIS_SECRET }}
      MULESOFT_API_MDM_EA_URL: ${{ secrets.MULESOFT_API_MDM_EA_URL }}
      MULESOFT_API_MDM_EA_KEY: ${{ secrets.MULESOFT_API_MDM_EA_KEY }}
      MULESOFT_API_MDM_EA_SECRET: ${{ secrets.MULESOFT_API_MDM_EA_SECRET }}

    steps:
      - uses: actions/checkout@v3
      - name: Start Docker Compose
        run: docker-compose up -d
      - name: Run e2e tests
        uses: cypress-io/github-action@v4
        with:
          headed: false
          record: true
          parallel: true
          browser: chrome
          group: 'EXIPS'
          project: ./e2e-tests
          config: video=false
        env: 
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#exip-github-actions'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()
