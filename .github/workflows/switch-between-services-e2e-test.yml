# EXIP Git Hub Actions
#####################################
# This GHA is responsible for initiating various test suites
# upon a PR creation, to ensure PR is healthy, bug-free and
# adheres to pre-written unit, API and E2E tests.

name: Quality Assurance - Switch between services E2E Tests
run-name: Executing test QA on ${{ github.repository }} üöÄ

on:
  pull_request:
    branches: [main-application]
    paths:
      - '.github/workflows/switch-between-services-e2e-test.yml'
      - 'src/**'
      - 'e2e-tests/**'
      - 'generate-exip-pricing-grid/**'
      - 'package*.json'

env:
  environment: 'qa'
  timezone: 'Europe/London'

jobs:
  # 1. Setup test infrastructure
  setup:
    name: Infrastructure setup üîß
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
      timezone: ${{ env.timezone }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.environment }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.timezone }}"

  # 3. E2E - E2E Journey test cases
  switch-between-services-e2e-tests:
    name: E2E - Switch between services üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v3

      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Dependencies
        working-directory: ./
        run: npm ci --legacy-peer-deps

      - name: Docker
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          API_PORT: ${{ vars.API_PORT }}
          UI_PORT: ${{ vars.UI_PORT }}
          API_URL: ${{ secrets.API_URL }}
          API_KEY: ${{ secrets.API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          BASIC_AUTH_KEY: ${{ secrets.BASIC_AUTH_KEY }}
          BASIC_AUTH_SECRET: ${{ secrets.BASIC_AUTH_SECRET }}
          APIM_MDM_URL: ${{ secrets.APIM_MDM_URL }}
          APIM_MDM_KEY: ${{ secrets.APIM_MDM_KEY }}
          APIM_MDM_VALUE: ${{ secrets.APIM_MDM_VALUE }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
          COMPANIES_HOUSE_API_URL: ${{ secrets.COMPANIES_HOUSE_API_URL }}
          COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}
          GOV_NOTIFY_EMAIL_RECIPIENT_1: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT_1 }}
          GOV_NOTIFY_EMAIL_RECIPIENT_2: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT_2 }}
          UNDERWRITING_TEAM_EMAIL: ${{ secrets.UNDERWRITING_TEAM_EMAIL }}
          FEEDBACK_EMAIL_RECIPIENT: ${{ secrets.FEEDBACK_EMAIL_RECIPIENT }}
          MOCK_ACCOUNT_PASSWORD: ${{ secrets.MOCK_ACCOUNT_PASSWORD }}
          JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
          JWT_VALIDATING_KEY: ${{ secrets.JWT_VALIDATING_KEY }}
        run: docker-compose up --build -d

      - name: 30s Sleep
        run: sleep 30s

      - name: Execute
        uses: cypress-io/github-action@v4
        with:
          install: false
          headed: false
          record: true
          parallel: true
          browser: chrome
          group: 'EXIP'
          project: ./e2e-tests/switch-between-services
          config: video=false
        env:
          TZ: Europe/London
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_KEY: ${{ secrets.API_KEY }}
          GOV_NOTIFY_EMAIL_RECIPIENT_1: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT_1 }}
          GOV_NOTIFY_EMAIL_RECIPIENT_2: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT_2 }}
          MOCK_ACCOUNT_PASSWORD: ${{ secrets.MOCK_ACCOUNT_PASSWORD }}
