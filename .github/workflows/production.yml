name: EXIPS - Production deployment

on:
  push:
    branches: [ prod ]
    paths:
    - 'src/ui/**'
  
env:
  environment: prod
  credentials: ${{ secrets.AZURE_DIGITAL_PROD }}
  from: latest
  acr: ${{ secrets.ACR_REGISTRY_PROD }}
  acr_username: ${{ secrets.ACR_USERNAME_PROD }}
  acr_password: ${{ secrets.ACR_PASSWORD_PROD }}

jobs:
  production-environment:
    name: Environment setup
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
    steps:
    - name: Initialise Environment
      run: echo "Setting up ${{ env.environment }} environment"

  #################### 1. GET-A-QUOTE ####################
  get-a-quote:
    needs: production-environment
    name: Get a quote
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.production-environment.outputs.environment }}
    env:
      repository: get-a-quote
      
    steps:
    - name: 1. Latest commit hash
      uses: actions/checkout@v3

    - name: 2. Build and push
      uses: docker/build-push-action@v1
      with:
        registry: ${{ env.acr }}
        username: ${{ env.acr_username }}
        password: ${{ env.acr_password }}
        repository: ${{ env.repository }}
        path: get-a-quote
        tags: latest
        build_args: GITHUB_SHA=${{ github.sha }}
        add_git_labels: true

    - name: 3. ACR login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.acr }}
        username: ${{ env.acr_username }}
        password: ${{ env.acr_password }}

    - name: 4. Tag images
      run: |
        from=${{ env.from }}
        to=${{ env.environment }}
        docker pull ${{ env.acr }}/${{ env.repository }}:$from
        docker tag ${{ env.acr }}/${{ env.repository }}:$from ${{ env.acr }}/${{ env.repository }}:$to
        docker push ${{ env.acr }}/${{ env.repository }}:$to

    - name: 5. Azure login
      uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: 6. Azure CLI defaults
      uses: azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=${{ secrets.AZURE_REGION }}
          az configure --defaults group=${{ secrets.RESOURCE_GROUP }}

    - name: 7. Slot
      uses: azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name exip-${{ env.environment }}-${{ env.repository }} --slot ${{ github.sha }} --configuration-source exip-${{ env.environment }}-${{ env.repository }}
          az webapp deployment slot swap --name exip-${{ env.environment }}-${{ env.repository }} --slot ${{ github.sha }} --action swap
          az webapp deployment slot delete --name exip-${{ env.environment }}-${{ env.repository }} --slot ${{ github.sha }}
    
    - name: 8. Restart
      uses: azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp restart --name exip-${{ env.environment }}-${{ env.repository }}