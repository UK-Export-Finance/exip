// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model ReferenceNumber {
  id            Int          @id @default(autoincrement())
  application   Application? @relation("ReferenceNumber_application", fields: [applicationId], references: [id])
  applicationId String?      @map("application")

  @@index([applicationId])
}

model Application {
  id                                      String                   @id @default(cuid())
  createdAt                               DateTime?
  updatedAt                               DateTime?
  eligibility                             Eligibility?             @relation("Application_eligibility", fields: [eligibilityId], references: [id])
  eligibilityId                           String?                  @map("eligibility")
  referenceNumber                         Int?
  submissionDeadline                      DateTime?
  submissionType                          String?                  @default("Manual Inclusion Application")
  policyAndExport                         PolicyAndExport?         @relation("Application_policyAndExport", fields: [policyAndExportId], references: [id])
  policyAndExportId                       String?                  @map("policyAndExport")
  exporterCompany                         ExporterCompany?         @relation("Application_exporterCompany", fields: [exporterCompanyId], references: [id])
  exporterCompanyId                       String?                  @map("exporterCompany")
  exporterCompanyAddress                  ExporterCompanyAddress?  @relation("Application_exporterCompanyAddress", fields: [exporterCompanyAddressId], references: [id])
  exporterCompanyAddressId                String?                  @map("exporterCompanyAddress")
  from_ReferenceNumber_application        ReferenceNumber[]        @relation("ReferenceNumber_application")
  from_PolicyAndExport_application        PolicyAndExport[]        @relation("PolicyAndExport_application")
  from_ExporterCompanyAddress_application ExporterCompanyAddress[] @relation("ExporterCompanyAddress_application")
  from_ExporterCompany_application        ExporterCompany[]        @relation("ExporterCompany_application")
  from_Eligibility_application            Eligibility[]            @relation("Eligibility_application")

  @@index([eligibilityId])
  @@index([referenceNumber])
  @@index([policyAndExportId])
  @@index([exporterCompanyId])
  @@index([exporterCompanyAddressId])
}

model PolicyAndExport {
  id                               String        @id @default(cuid())
  application                      Application?  @relation("PolicyAndExport_application", fields: [applicationId], references: [id])
  applicationId                    String?       @map("application")
  policyType                       String?
  requestedStartDate               DateTime?
  contractCompletionDate           DateTime?
  totalValueOfContract             Int?
  creditPeriodWithBuyer            String        @default("")
  policyCurrencyCode               String        @default("")
  totalMonthsOfCover               Int?
  totalSalesToBuyer                Int?
  maximumBuyerWillOwe              Int?
  goodsOrServicesDescription       String        @default("")
  from_Application_policyAndExport Application[] @relation("Application_policyAndExport")

  @@index([applicationId])
}

model ExporterBusiness {
  id                            String            @id @default(cuid())
  company                       ExporterCompany?  @relation("ExporterBusiness_company", fields: [companyId], references: [id])
  companyId                     String?           @map("company")
  from_ExporterCompany_business ExporterCompany[] @relation("ExporterCompany_business")

  @@index([companyId])
}

model ExporterCompanyAddress {
  id                                          String            @id @default(cuid())
  exporterCompany                             ExporterCompany?  @relation("ExporterCompanyAddress_exporterCompany", fields: [exporterCompanyId], references: [id])
  exporterCompanyId                           String?           @map("exporterCompany")
  application                                 Application?      @relation("ExporterCompanyAddress_application", fields: [applicationId], references: [id])
  applicationId                               String?           @map("application")
  addressLine1                                String            @default("")
  addressLine2                                String            @default("")
  careOf                                      String            @default("")
  locality                                    String            @default("")
  region                                      String            @default("")
  postalCode                                  String            @default("")
  country                                     String            @default("")
  premises                                    String            @default("")
  from_Application_exporterCompanyAddress     Application[]     @relation("Application_exporterCompanyAddress")
  from_ExporterCompany_exporterCompanyAddress ExporterCompany[] @relation("ExporterCompany_exporterCompanyAddress")

  @@index([exporterCompanyId])
  @@index([applicationId])
}

model ExporterCompany {
  id                                          String                   @id @default(cuid())
  application                                 Application?             @relation("ExporterCompany_application", fields: [applicationId], references: [id])
  applicationId                               String?                  @map("application")
  exporterCompanyAddress                      ExporterCompanyAddress?  @relation("ExporterCompany_exporterCompanyAddress", fields: [exporterCompanyAddressId], references: [id])
  exporterCompanyAddressId                    String?                  @map("exporterCompanyAddress")
  business                                    ExporterBusiness?        @relation("ExporterCompany_business", fields: [businessId], references: [id])
  businessId                                  String?                  @map("business")
  sicCodes                                    ExporterCompanySicCode?  @relation("ExporterCompany_sicCodes", fields: [sicCodesId], references: [id])
  sicCodesId                                  String?                  @map("sicCodes")
  companyName                                 String                   @default("")
  companyNumber                               String                   @default("")
  dateOfCreation                              DateTime?
  hasTradingAddress                           Boolean                  @default(false)
  hasTradingName                              Boolean                  @default(false)
  companyWebsite                              String                   @default("")
  phoneNumber                                 String                   @default("")
  from_Application_exporterCompany            Application[]            @relation("Application_exporterCompany")
  from_ExporterBusiness_company               ExporterBusiness[]       @relation("ExporterBusiness_company")
  from_ExporterCompanyAddress_exporterCompany ExporterCompanyAddress[] @relation("ExporterCompanyAddress_exporterCompany")

  @@index([applicationId])
  @@index([exporterCompanyAddressId])
  @@index([businessId])
  @@index([sicCodesId])
}

model ExporterCompanySicCode {
  id                            String            @id @default(cuid())
  code                          String            @default("")
  from_ExporterCompany_sicCodes ExporterCompany[] @relation("ExporterCompany_sicCodes")
}

model Country {
  id                            String        @id @default(cuid())
  isoCode                       String        @default("")
  name                          String        @default("")
  from_Eligibility_buyerCountry Eligibility[] @relation("Eligibility_buyerCountry")
}

model Eligibility {
  id                           String        @id @default(cuid())
  application                  Application?  @relation("Eligibility_application", fields: [applicationId], references: [id])
  applicationId                String?       @map("application")
  buyerCountry                 Country?      @relation("Eligibility_buyerCountry", fields: [buyerCountryId], references: [id])
  buyerCountryId               String?       @map("buyerCountry")
  hasMinimumUkGoodsOrServices  Boolean       @default(false)
  validExporterLocation        Boolean       @default(false)
  hasCompaniesHouseNumber      Boolean       @default(false)
  otherPartiesInvolved         Boolean       @default(false)
  paidByLetterOfCredit         Boolean       @default(false)
  needPreCreditPeriodCover     Boolean       @default(false)
  wantCoverOverMaxAmount       Boolean       @default(false)
  wantCoverOverMaxPeriod       Boolean       @default(false)
  from_Application_eligibility Application[] @relation("Application_eligibility")

  @@index([applicationId])
  @@index([buyerCountryId])
}

model Page {
  id        String @id @default(cuid())
  heading   String @default("")
  metaTitle String @default("")
  content   Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
}
