// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model ReferenceNumber {
  id            Int          @id @default(autoincrement())
  application   Application? @relation("ReferenceNumber_application", fields: [applicationId], references: [id])
  applicationId String?      @map("application")

  @@index([applicationId])
}

model Application {
  id                                String             @id @default(cuid())
  createdAt                         DateTime?
  updatedAt                         DateTime?
  eligibility                       Eligibility?       @relation("Application_eligibility", fields: [eligibilityId], references: [id])
  eligibilityId                     String?            @map("eligibility")
  referenceNumber                   Int?
  submissionDeadline                DateTime?
  submissionType                    String?            @default("Manual Inclusion Application")
  policyAndExport                   PolicyAndExport?   @relation("Application_policyAndExport", fields: [policyAndExportId], references: [id])
  policyAndExportId                 String?            @map("policyAndExport")
  exporter                          Exporter?          @relation("Application_exporter", fields: [exporterId], references: [id])
  exporterId                        String?            @map("exporter")
  exporterBusiness                  ExporterBusiness?  @relation("Application_exporterBusiness", fields: [exporterBusinessId], references: [id])
  exporterBusinessId                String?            @map("exporterBusiness")
  exporterCompany                   ExporterCompany?   @relation("Application_exporterCompany", fields: [exporterCompanyId], references: [id])
  exporterCompanyId                 String?            @map("exporterCompany")
  exporterBroker                    ExporterBroker?    @relation("Application_exporterBroker", fields: [exporterBrokerId], references: [id])
  exporterBrokerId                  String?            @map("exporterBroker")
  buyer                             Buyer?             @relation("Application_buyer", fields: [buyerId], references: [id])
  buyerId                           String?            @map("buyer")
  from_ReferenceNumber_application  ReferenceNumber[]  @relation("ReferenceNumber_application")
  from_PolicyAndExport_application  PolicyAndExport[]  @relation("PolicyAndExport_application")
  from_Exporter_applications        Exporter[]         @relation("Exporter_applications")
  from_ExporterBusiness_application ExporterBusiness[] @relation("ExporterBusiness_application")
  from_ExporterBroker_application   ExporterBroker[]   @relation("ExporterBroker_application")
  from_ExporterCompany_application  ExporterCompany[]  @relation("ExporterCompany_application")
  from_Buyer_application            Buyer[]            @relation("Buyer_application")
  from_Eligibility_application      Eligibility[]      @relation("Eligibility_application")

  @@index([eligibilityId])
  @@index([referenceNumber])
  @@index([policyAndExportId])
  @@index([exporterId])
  @@index([exporterBusinessId])
  @@index([exporterCompanyId])
  @@index([exporterBrokerId])
  @@index([buyerId])
}

model PolicyAndExport {
  id                               String        @id @default(cuid())
  application                      Application?  @relation("PolicyAndExport_application", fields: [applicationId], references: [id])
  applicationId                    String?       @map("application")
  policyType                       String?
  requestedStartDate               DateTime?
  contractCompletionDate           DateTime?
  totalValueOfContract             Int?
  creditPeriodWithBuyer            String        @default("")
  policyCurrencyCode               String        @default("") @mysql.VarChar(1000)
  totalMonthsOfCover               Int?
  totalSalesToBuyer                Int?
  maximumBuyerWillOwe              Int?
  goodsOrServicesDescription       String        @default("") @mysql.VarChar(1000)
  finalDestinationCountryCode      String        @default("")
  from_Application_policyAndExport Application[] @relation("Application_policyAndExport")

  @@index([applicationId])
}

model Exporter {
  id                        String        @id @default(cuid())
  createdAt                 DateTime?
  updatedAt                 DateTime?
  firstName                 String        @default("")
  lastName                  String        @default("")
  email                     String        @default("")
  salt                      String        @default("")
  hash                      String        @default("")
  isVerified                Boolean       @default(false)
  verificationHash          String        @default("")
  verificationExpiry        DateTime?
  otpSalt                   String        @default("")
  otpHash                   String        @default("") @mysql.VarChar(256)
  otpExpiry                 DateTime?
  sessionExpiry             DateTime?
  sessionIdentifier         String        @default("")
  applications              Application[] @relation("Exporter_applications")
  from_Application_exporter Application[] @relation("Application_exporter")
}

model ExporterBusiness {
  id                                String        @id @default(cuid())
  application                       Application?  @relation("ExporterBusiness_application", fields: [applicationId], references: [id])
  applicationId                     String?       @map("application")
  goodsOrServicesSupplied           String        @default("") @mysql.VarChar(1000)
  totalYearsExporting               Int?
  totalEmployeesUK                  Int?
  totalEmployeesInternational       Int?
  estimatedAnnualTurnover           Int?
  exportsTurnoverPercentage         Int?
  from_Application_exporterBusiness Application[] @relation("Application_exporterBusiness")

  @@index([applicationId])
}

model ExporterBroker {
  id                              String        @id @default(cuid())
  application                     Application?  @relation("ExporterBroker_application", fields: [applicationId], references: [id])
  applicationId                   String?       @map("application")
  isUsingBroker                   String?
  name                            String        @default("")
  addressLine1                    String        @default("")
  addressLine2                    String        @default("")
  town                            String        @default("")
  county                          String        @default("")
  postcode                        String        @default("")
  email                           String        @default("")
  from_Application_exporterBroker Application[] @relation("Application_exporterBroker")

  @@index([applicationId])
}

model ExporterCompanyAddress {
  id              String           @id @default(cuid())
  exporterCompany ExporterCompany? @relation("ExporterCompany_registeredOfficeAddress")
  addressLine1    String           @default("")
  addressLine2    String           @default("")
  careOf          String           @default("")
  locality        String           @default("")
  region          String           @default("")
  postalCode      String           @default("")
  country         String           @default("")
  premises        String           @default("")
}

model ExporterCompany {
  id                               String                   @id @default(cuid())
  application                      Application?             @relation("ExporterCompany_application", fields: [applicationId], references: [id])
  applicationId                    String?                  @map("application")
  registeredOfficeAddress          ExporterCompanyAddress?  @relation("ExporterCompany_registeredOfficeAddress", fields: [registeredOfficeAddressId], references: [id])
  registeredOfficeAddressId        String?                  @unique @map("registeredOfficeAddress")
  sicCodes                         ExporterCompanySicCode[] @relation("ExporterCompanySicCode_exporterCompany")
  companyName                      String                   @default("")
  companyNumber                    String                   @default("")
  dateOfCreation                   DateTime?
  hasTradingAddress                String?
  hasTradingName                   String?
  companyWebsite                   String                   @default("")
  phoneNumber                      String                   @default("")
  financialYearEndDate             DateTime?
  from_Application_exporterCompany Application[]            @relation("Application_exporterCompany")

  @@index([applicationId])
}

model ExporterCompanySicCode {
  id                String           @id @default(cuid())
  exporterCompany   ExporterCompany? @relation("ExporterCompanySicCode_exporterCompany", fields: [exporterCompanyId], references: [id])
  exporterCompanyId String?          @map("exporterCompany")
  sicCode           String           @default("")

  @@index([exporterCompanyId])
}

model Buyer {
  id                        String        @id @default(cuid())
  application               Application?  @relation("Buyer_application", fields: [applicationId], references: [id])
  applicationId             String?       @map("application")
  companyOrOrganisationName String        @default("")
  address                   String        @default("") @mysql.VarChar(1000)
  country                   String        @default("")
  registrationNumber        String        @default("")
  website                   String        @default("")
  contactFirstName          String        @default("")
  contactLastName           String        @default("")
  contactPosition           String        @default("")
  contactEmail              String        @default("")
  canContactBuyer           String?
  from_Application_buyer    Application[] @relation("Application_buyer")

  @@index([applicationId])
}

model Country {
  id                            String        @id @default(cuid())
  isoCode                       String        @default("")
  name                          String        @default("")
  from_Eligibility_buyerCountry Eligibility[] @relation("Eligibility_buyerCountry")
}

model Eligibility {
  id                           String        @id @default(cuid())
  application                  Application?  @relation("Eligibility_application", fields: [applicationId], references: [id])
  applicationId                String?       @map("application")
  buyerCountry                 Country?      @relation("Eligibility_buyerCountry", fields: [buyerCountryId], references: [id])
  buyerCountryId               String?       @map("buyerCountry")
  hasMinimumUkGoodsOrServices  Boolean       @default(false)
  validExporterLocation        Boolean       @default(false)
  hasCompaniesHouseNumber      Boolean       @default(false)
  otherPartiesInvolved         Boolean       @default(false)
  paidByLetterOfCredit         Boolean       @default(false)
  needPreCreditPeriodCover     Boolean       @default(false)
  wantCoverOverMaxAmount       Boolean       @default(false)
  wantCoverOverMaxPeriod       Boolean       @default(false)
  from_Application_eligibility Application[] @relation("Application_eligibility")

  @@index([applicationId])
  @@index([buyerCountryId])
}

model Page {
  id        String @id @default(cuid())
  heading   String @default("")
  metaTitle String @default("")
  content   Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
}
