{"version":3,"file":"cookies.js","mappings":"qBAAA,MAAMA,EAAaC,SAASC,cAAc,YACpCC,EAAeF,SAASC,cAAc,wBACtCE,EAAeH,SAASC,cAAc,6BACtCG,EAAeJ,SAASC,cAAc,6BACtCI,EAA4BL,SAASC,cAAc,iCACnDK,EAAa,yBAoBbC,EAAaC,GAAWR,SAASS,OAASH,EAAa,IAAME,EAAQ,sCAdxDE,MACjB,MAAMC,EAAO,IAAIC,KAGXC,EAASF,EAAKG,QAAQH,EAAKI,UAAY,GAG7C,MAAO,WAFW,IAAIH,KAAKC,GAAQG,cAEH,MAOiFN,GAO5GV,SAASS,OAAOQ,SAASX,KAC5BJ,EAAagB,gBAAgB,UAC7BhB,EAAaiB,aAAa,WAAY,MACtCjB,EAAakB,QACblB,EAAamB,iBAAiB,QAAQ,KACpCnB,EAAagB,gBAAgB,gBAK7Bd,GACFA,EAAaiB,iBAAiB,SAAS,SAAUC,GAC/Cf,GAAU,EACZ,IAIEJ,GACFA,EAAakB,iBAAiB,SAAS,SAAUC,GAC/Cf,GAAU,EACZ,IAIER,GACFA,EAAWsB,iBAAiB,SAAS,SAAUC,GAC7CpB,EAAaiB,aAAa,SAAU,UACpCG,EAAMC,gBACR,IAGElB,GACFA,EAA0BgB,iBAAiB,SAAS,SAAUC,GAG5D,GAFiBtB,SAASC,cAAc,yCAE1B,CACZ,MAAMuB,EAASxB,SAASC,cAAc,yCAAyCO,MAEhE,WAAXgB,GACFjB,GAAU,GAGG,WAAXiB,GACFjB,GAAU,EAEd,CACF,K","sources":["webpack://EXIP/./scripts/cookies.js"],"sourcesContent":["const hideButton = document.querySelector('.js-hide');\nconst cookieBanner = document.querySelector('.govuk-cookie-banner');\nconst acceptButton = document.querySelector('.js-cookies-button-accept');\nconst rejectButton = document.querySelector('.js-cookies-button-reject');\nconst changeCookiesSubmitButton = document.querySelector('.change-cookies-submit-button');\nconst cookieName = '__Host-optionalCookies';\n\n/**\n * Sets cookie expiry timestamp\n * @returns String cookie expiry date\n */\nconst expiryDate = () => {\n  const date = new Date();\n\n  // 1 day.\n  const oneDay = date.setDate(date.getDate() + 1);\n  const utcString = new Date(oneDay).toUTCString();\n\n  return 'expires=' + utcString + '; ';\n};\n\n/**\n * Set's cookie value\n * @param {Boolean} value cookie value\n */\nconst setCookie = (value) => (document.cookie = cookieName + '=' + value + '; path=/; SameSite=Strict; secure; ' + expiryDate());\n\n/**\n * Initialise cookie banner and listeners\n */\nconst init = () => {\n  // Shift focus to the cookie banner\n  if (!document.cookie.includes(cookieName)) {\n    cookieBanner.removeAttribute('hidden');\n    cookieBanner.setAttribute('tabindex', '-1');\n    cookieBanner.focus();\n    cookieBanner.addEventListener('blur', () => {\n      cookieBanner.removeAttribute('tabindex');\n    });\n  }\n\n  // Cookie is rejected by the user\n  if (rejectButton) {\n    rejectButton.addEventListener('click', function (event) {\n      setCookie(false);\n    });\n  }\n\n  // Cookie is accepted by the user\n  if (acceptButton) {\n    acceptButton.addEventListener('click', function (event) {\n      setCookie(true);\n    });\n  }\n\n  // Hide cookie banner\n  if (hideButton) {\n    hideButton.addEventListener('click', function (event) {\n      cookieBanner.setAttribute('hidden', 'hidden');\n      event.preventDefault();\n    });\n  }\n\n  if (changeCookiesSubmitButton) {\n    changeCookiesSubmitButton.addEventListener('click', function (event) {\n      const checkbox = document.querySelector('input[name=\"optionalCookies\"]:checked');\n\n      if (checkbox) {\n        const answer = document.querySelector('input[name=\"optionalCookies\"]:checked').value;\n\n        if (answer === 'reject') {\n          setCookie(false);\n        }\n\n        if (answer === 'accept') {\n          setCookie(true);\n        }\n      }\n    });\n  }\n};\n\n// Call init when element is loaded\ninit();\n"],"names":["hideButton","document","querySelector","cookieBanner","acceptButton","rejectButton","changeCookiesSubmitButton","cookieName","setCookie","value","cookie","expiryDate","date","Date","oneDay","setDate","getDate","toUTCString","includes","removeAttribute","setAttribute","focus","addEventListener","event","preventDefault","answer"],"sourceRoot":""}