{% extends 'index.njk' %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from 'govuk/components/error-summary/macro.njk' import govukErrorSummary %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% import '../components/details-text.njk' as detailsText %}
{% import '../components/submit-button.njk' as submitButton %}

{% block pageTitle %}
  {{ CONTENT_STRINGS.PAGE_TITLE }}
{% endblock %}

{% block content %}

  {{ govukBackLink({
    text: CONTENT_STRINGS.LINKS.BACK,
    href: BACK_LINK,
    attributes: {
      "data-cy": DATA_CY.BACK_LINK
    }
  }) }}

  {% if validationErrors.summary %}
    {{ govukErrorSummary({
      titleText: CONTENT_STRINGS.ERROR_MESSAGES.THERE_IS_A_PROBLEM,
      errorList: validationErrors.summary
    }) }}
  {% endif %}

  {% set SINGLE_OPTION = FIELDS.POLICY_TYPE.OPTIONS.SINGLE %}
  {% set MULTIPLE_OPTION = FIELDS.POLICY_TYPE.OPTIONS.MULTIPLE %}


  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop">

      <form method="POST" data-cy="form" enctype="application/x-www-form-urlencoded" novalidate>

        <input type="hidden" name="_csrf" value="{{ csrfToken }}">

        {% set singlePolicyHintHtml %}
          <ul>
            {% for item in SINGLE_OPTION.HINT %}
              <li class="govuk-!-margin-bottom-5" data-cy="{{ SINGLE_OPTION.ID }}-hint-list-item-{{ loop.index }}">{{ item }} </li>
            {% endfor %}
          </ul>
        {% endset %}

        {% set singlePolicyLengthHintHtml %}
          <div data-cy="{{ FIELDS.POLICY_LENGTH.ID }}-hint">
            {{ detailsText.render({
              items: FIELDS.POLICY_LENGTH.HINT
            }) }}
          </div>
        {% endset %}

        {% set multiplePolicyHintHtml %}
          <ul>
            {% for item in MULTIPLE_OPTION.HINT %}
              <li class="govuk-!-margin-bottom-5" data-cy="{{ MULTIPLE_OPTION.ID }}-hint-list-item-{{ loop.index }}">{{ item }} </li>
            {% endfor %}
          </ul>
        {% endset %}

        {{ govukRadios({
          idPrefix: FIELDS.POLICY_TYPE.ID,
          name: FIELDS.POLICY_TYPE.ID,
          fieldset: {
            legend: {
              html: "<legend class='govuk-fieldset__legend govuk-fieldset__legend--l'><h1 class='govuk-fieldset__heading' id='heading' data-cy='heading'>" + CONTENT_STRINGS.PAGE_TITLE + "</h1></legend>"
            }
          },
          classes: "govuk-!-margin-bottom-4",
          items: [
            {
              id: SINGLE_OPTION.ID,
              value: SINGLE_OPTION.VALUE,
              text: SINGLE_OPTION.TEXT,
              label: {
                classes: 'govuk-heading-m govuk-!-font-weight-bold govuk-!-font-size-24',
                attributes: {
                  'data-cy': SINGLE_OPTION.ID + '-label'
                }
              },
              hint: {
                html: singlePolicyHintHtml,
                classes: 'govuk-!-padding-left-0 govuk-!-margin-bottom-8'
              },
              attributes: {
                'data-cy': SINGLE_OPTION.ID + '-input'
              },
              checked: submittedValues[FIELDS.POLICY_TYPE.ID] === SINGLE_OPTION.VALUE
            },
            {
              id: MULTIPLE_OPTION.ID,
              value: MULTIPLE_OPTION.VALUE,
              text: MULTIPLE_OPTION.TEXT,
              label: {
                classes: 'govuk-heading-m govuk-!-font-weight-bold govuk-!-font-size-24',
                attributes: {
                  'data-cy': MULTIPLE_OPTION.ID + '-label'
                }
              },
              hint: {
                html: multiplePolicyHintHtml,
                classes: 'govuk-!-padding-left-0'
              },
              attributes: {
                'data-cy': MULTIPLE_OPTION.ID + '-input'
              },
              checked: submittedValues[FIELDS.POLICY_TYPE.ID] === MULTIPLE_OPTION.VALUE,
              conditional: {
                html: multiplePolicyTypeInsetHtml
              }
            }
          ],
          errorMessage: validationErrors.errorList[SINGLE_OPTION.ID] and {
            text: validationErrors.errorList[SINGLE_OPTION.ID].text,
            attributes: {
              "data-cy": FIELDS.POLICY_TYPE.ID + "-error-message"
            }
          }
        }) }}

        {{ submitButton.render({
          text: CONTENT_STRINGS.BUTTONS.CONTINUE
        }) }}

      </form>

    </div>
  </div>

{% endblock %}
