{% import '../../components/monetary-value-input.njk' as monetaryValueInput %}

{#
  sets url for alternative currency link
  if isChange - then adds /change to url
  if isCheckAndChange - then adds /check-and-change to url
  else sets it to PROVIDE_ALTERNATIVE_CURRENCY_URL
#}
{% if isChange === true %}
  {% set alternativeCurrencyUrl = PROVIDE_ALTERNATIVE_CURRENCY_URL + "/change"%}
{% elif isCheckAndChange === true %}
  {% set alternativeCurrencyUrl = PROVIDE_ALTERNATIVE_CURRENCY_URL + "/check-and-change"%}
{% else %}
  {% set alternativeCurrencyUrl = PROVIDE_ALTERNATIVE_CURRENCY_URL%}
{% endif %}

<div class="govuk-grid-row">
  <span data-cy="{{FIELDS.TOTAL_OUTSTANDING_PAYMENTS.ID}}-heading" class="govuk-heading-m govuk-!-margin-bottom-4">{{ FIELDS.TOTAL_OUTSTANDING_PAYMENTS.HEADING }}</span>

  {{ monetaryValueInput.render({
    fieldId: FIELDS.TOTAL_OUTSTANDING_PAYMENTS.ID,
    label: FIELDS.TOTAL_OUTSTANDING_PAYMENTS.LABEL,
    currencyPrefixSymbol: CURRENCY_PREFIX_SYMBOL,
    submittedValue: submittedValues[FIELDS.TOTAL_OUTSTANDING_PAYMENTS.ID] or application.buyer.buyerTradingHistory[FIELDS.TOTAL_OUTSTANDING_PAYMENTS.ID],
    validationError: validationErrors.errorList[FIELDS.TOTAL_OUTSTANDING_PAYMENTS.ID],
    legendClass: LEGEND_CLASS
  }) }}

  {{ monetaryValueInput.render({
    fieldId: FIELDS.TOTAL_AMOUNT_OVERDUE.ID,
    label: FIELDS.TOTAL_AMOUNT_OVERDUE.LABEL,
    currencyPrefixSymbol: CURRENCY_PREFIX_SYMBOL,
    submittedValue: submittedValues[FIELDS.TOTAL_AMOUNT_OVERDUE.ID] or application.buyer.buyerTradingHistory[FIELDS.TOTAL_AMOUNT_OVERDUE.ID],
    validationError: validationErrors.errorList[FIELDS.TOTAL_AMOUNT_OVERDUE.ID],
    legendClass: LEGEND_CLASS
  }) }}

  <p class-"govuk-body">
    <a class="govuk-link" data-cy="provide-alternative-currency-link" href="{{ alternativeCurrencyUrl }}">{{ CONTENT_STRINGS.PROVIDE_ALTERNATIVE_CURRENCY }}</a>
  </p>
<div>